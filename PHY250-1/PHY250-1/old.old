float** MemAlloc(int rows, int cols){
    float** arr = new float*[rows];
    for(int i = 0; i < rows; i++){
        arr[i] = new float[cols];
        for(int j = 0; j < cols; j++){
            arr[i][j] = i*j;
        }
    }
    
    return arr;
}


void DeAlloc(float** ptr, int rows){
    for(int i = 0; i< rows; i++){
        delete[] ptr[i];
        
    }
    delete[] ptr;
}



void Print_Arr(void* arr, int n,int m){
    float** tmp = (float**)arr;
    for(int i = 0; i < n; i++){
        float* ptr = *(tmp + i);
        for(int j = 0; j < m; j++){
            float val = *(ptr +j);
            printf("arr[%d] = %.2f\n",i, val);
        }
        
    }
}

void Print_Arr(void* arr, int num){
    float* test = (float*)arr;
    for(int i = 0; i < num; i++){
        float val = *(test + i);
        printf("arr[%d] = %.2f\n",i, val);
    }
}


void Print_Arr(float** arr, int n,int m){
    for(int i = 0; i < n; i++){
        for(int j = 0; j < m; j++){
            int prod = i*j;
            int val = (int)arr[i][j];
            if(prod != val){
                printf("What did you do!!!!!!\n");
                exit(10);
            }
            
            printf("arr[%d][%d] = %.2f i*j = %d\n",i,j, arr[i][j], i*j);
        }
        
    }
}

